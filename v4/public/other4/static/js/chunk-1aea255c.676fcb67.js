(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1aea255c"],{"1da1":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n("d3b7");function r(e,t,n,r,a,o,i){try{var s=e[o](i),c=s.value}catch(l){return void n(l)}s.done?t(c):Promise.resolve(c).then(r,a)}function a(e){return function(){var t=this,n=arguments;return new Promise((function(a,o){var i=e.apply(t,n);function s(e){r(i,a,o,s,c,"next",e)}function c(e){r(i,a,o,s,c,"throw",e)}s(void 0)}))}}},5384:function(e,t,n){"use strict";n.r(t);var r=n("7a23"),a=Object(r["createElementVNode"])("p",{class:"tip"},[Object(r["createTextVNode"])(" 使用 "),Object(r["createElementVNode"])("a",{class:"link",href:"https://www.npmjs.com/package/xlsx",target:"_blank"},"xlsx"),Object(r["createTextVNode"])(" 自行实现导入数据"),Object(r["createElementVNode"])("br"),Object(r["createElementVNode"])("a",{class:"link",href:"https://www.npmjs.com/package/vxe-table",target:"_blank"},"vxe-table"),Object(r["createTextVNode"])(" 作为表格组件，可以很容易跟其他优秀的组件库互相集成，以下为简单示例可供参考。"),Object(r["createElementVNode"])("br"),Object(r["createElementVNode"])("span",{class:"red"},"（注：该示例仅供参考，具体逻辑请自行实现）")],-1),o=Object(r["createTextVNode"])("选择文件"),i={class:"demo-code"},s=Object(r["createTextVNode"])("      "),c=Object(r["createTextVNode"])("\r\n      "),l=Object(r["createTextVNode"])("\r\n    "),d=Object(r["createElementVNode"])("p",{class:"tip"},[Object(r["createTextVNode"])(" 使用 "),Object(r["createElementVNode"])("a",{class:"link",href:"https://www.npmjs.com/package/xlsx",target:"_blank"},"xlsx"),Object(r["createTextVNode"])(" 实现导出 xlsx 文件"),Object(r["createElementVNode"])("br"),Object(r["createElementVNode"])("span",{class:"red"},"（注：该示例仅供参考，具体逻辑请自行实现）")],-1),u=Object(r["createTextVNode"])("导出.xlsx"),x={class:"demo-code"},m=Object(r["createTextVNode"])("      "),b=Object(r["createTextVNode"])("\r\n      "),p=Object(r["createTextVNode"])("\r\n    ");function f(e,t,n,f,v,h){var g=Object(r["resolveComponent"])("vxe-button"),O=Object(r["resolveComponent"])("vxe-toolbar"),j=Object(r["resolveComponent"])("vxe-grid"),T=Object(r["resolveComponent"])("pre-code");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",null,[a,Object(r["createVNode"])(j,Object(r["mergeProps"])({ref:"xGrid1"},e.gridOptions1),{toolbar:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(O,null,{buttons:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(g,{onClick:e.impotEvent},{default:Object(r["withCtx"])((function(){return[o]})),_:1},8,["onClick"])]})),_:1})]})),_:1},16),Object(r["createElementVNode"])("p",i,Object(r["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(r["createElementVNode"])("pre",null,[s,Object(r["createVNode"])(T,{class:"xml"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),c,Object(r["createVNode"])(T,{class:"typescript"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),l]),d,Object(r["createVNode"])(j,Object(r["mergeProps"])({ref:"xGrid2"},e.gridOptions2),{toolbar:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(O,null,{buttons:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(g,{onClick:e.exportEvent},{default:Object(r["withCtx"])((function(){return[u]})),_:1},8,["onClick"])]})),_:1})]})),_:1},16),Object(r["createElementVNode"])("p",x,Object(r["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(r["createElementVNode"])("pre",null,[m,Object(r["createVNode"])(T,{class:"xml"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[2]),1)]})),_:1}),b,Object(r["createVNode"])(T,{class:"typescript"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[3]),1)]})),_:1}),p])])}var v=n("1da1"),h=(n("96cf"),n("d3b7"),n("159b"),n("ac1f"),n("1276"),n("5f5c")),g=n.n(h),O=Object(r["defineComponent"])({setup:function(){var e=Object(r["ref"])({}),t=Object(r["reactive"])({border:!0,height:300,columns:[{type:"checkbox",width:60},{field:"name",title:"Name"},{field:"role",title:"Role"},{field:"sex",title:"Sex",formatter:function(e){var t=e.cellValue;return"1"===t?"男":"0"===t?"女":""}},{field:"age",title:"Age"},{field:"address",title:"Address",showOverflow:!0}],data:[]}),n=function(){var n=Object(v["a"])(regeneratorRuntime.mark((function n(){var r,a,o,i;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return r=e.value,n.next=3,r.readFile({types:["xls","xlsx"]});case 3:a=n.sent,o=a.files,i=new FileReader,i.onload=function(e){var n=e.target?e.target.result:"",r=g.a.read(n,{type:"binary"}),a=g.a.utils.sheet_to_csv(r.Sheets.Sheet1),o=[],i=t.columns;i&&a.split("\n").forEach((function(e){if(e){var t=e.split(","),n={};t.forEach((function(e,t){var r=i[t];r.field&&(n[r.field]=e)})),o.push(n)}})),t.data=o},i.readAsBinaryString(o[0]);case 8:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}(),a=Object(r["ref"])({}),o=Object(r["reactive"])({border:!0,height:300,columns:[{type:"checkbox",width:60},{field:"name",title:"Name"},{field:"role",title:"Role"},{field:"sex",title:"Sex",formatter:function(e){var t=e.cellValue;return"1"===t?"男":"0"===t?"女":""}},{field:"age",title:"Age"},{field:"address",title:"Address",showOverflow:!0}],data:[{id:10001,name:"Test1",nickname:"T1",role:"Develop",sex:"1",age:28,address:"Shenzhen"},{id:10002,name:"Test2",nickname:"T2",role:"Test",sex:"0",age:22,address:"Guangzhou"},{id:10003,name:"Test3",nickname:"T3",role:"PM",sex:"1",age:32,address:"Shanghai"},{id:10004,name:"Test4",nickname:"T4",role:"Designer",sex:"0",age:23,address:"Shenzhen"},{id:10005,name:"Test5",nickname:"T5",role:"Develop",sex:"0",age:30,address:"Shanghai"},{id:10006,name:"Test6",nickname:"T6",role:"Designer",sex:"0",age:21,address:"Shenzhen"},{id:10007,name:"Test7",nickname:"T7",role:"Test",sex:"1",age:29,address:"Guangzhou"},{id:10008,name:"Test8",nickname:"T8",role:"Develop",sex:"1",age:35,address:"Shenzhen"},{id:10009,name:"Test9",nickname:"T9",role:"Test",sex:"1",age:24,address:"Shenzhen"},{id:100010,name:"Test10",nickname:"T10",role:"Develop",sex:"1",age:20,address:"Guangzhou"}]}),i=function(){var e=a.value,t=g.a.utils.table_to_book(e.$el.querySelector(".body--wrapper>.vxe-table--body"));g.a.writeFile(t,"数据导出.xlsx")};return{xGrid1:e,gridOptions1:t,impotEvent:n,xGrid2:a,gridOptions2:o,exportEvent:i,demoCodes:['\n        <vxe-grid ref="xGrid1" v-bind="gridOptions1">\n          <template #toolbar>\n            <vxe-toolbar>\n              <template #buttons>\n                <vxe-button @click="impotEvent">选择文件</vxe-button>\n              </template>\n            </vxe-toolbar>\n          </template>\n        </vxe-grid>\n        ',"\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VxeGridProps, VxeGridInstance } from 'vxe-table'\n        import XLSX from 'xlsx'\n\n        export default defineComponent({\n          setup () {\n            const xGrid1 = ref({} as VxeGridInstance)\n\n            const gridOptions1 = reactive({\n              border: true,\n              height: 300,\n              columns: [\n                { type: 'checkbox', width: 60 },\n                { field: 'name', title: 'Name' },\n                { field: 'role', title: 'Role' },\n                {\n                  field: 'sex',\n                  title: 'Sex',\n                  formatter ({ cellValue }) {\n                    if (cellValue === '1') {\n                      return '男'\n                    } else if (cellValue === '0') {\n                      return '女'\n                    }\n                    return ''\n                  }\n                },\n                { field: 'age', title: 'Age' },\n                { field: 'address', title: 'Address', showOverflow: true }\n              ],\n              data: [] as any[]\n            } as VxeGridProps)\n\n            const impotEvent = async () => {\n              const $grid = xGrid1.value\n              const { files } = await $grid.readFile({\n                types: ['xls', 'xlsx']\n              })\n              const fileReader = new FileReader()\n              fileReader.onload = (event) => {\n                const data = event.target ? event.target.result : ''\n                const workbook = XLSX.read(data, { type: 'binary' })\n                const csvData = XLSX.utils.sheet_to_csv(workbook.Sheets.Sheet1)\n                const tableData: any[] = []\n                // 解析数据\n                const { columns } = gridOptions1\n                if (columns) {\n                  csvData.split('\\n').forEach((vRow) => {\n                    if (vRow) {\n                      const vCols = vRow.split(',')\n                      const item: any = {}\n                      vCols.forEach((val, cIndex) => {\n                        const column = columns[cIndex]\n                        if (column.field) {\n                          item[column.field] = val\n                        }\n                      })\n                      tableData.push(item)\n                    }\n                  })\n                }\n                gridOptions1.data = tableData\n              }\n              fileReader.readAsBinaryString(files[0])\n            }\n\n            return {\n              xGrid1,\n              gridOptions1,\n              impotEvent\n            }\n          }\n        })\n        ",'\n        <vxe-grid ref="xGrid2" v-bind="gridOptions2">\n          <template #toolbar>\n            <vxe-toolbar>\n              <template #buttons>\n                <vxe-button @click="exportEvent">导出.xlsx</vxe-button>\n              </template>\n            </vxe-toolbar>\n          </template>\n        </vxe-grid>\n        ',"\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VxeGridProps, VxeGridInstance } from 'vxe-table'\n        import XLSX from 'xlsx'\n\n        export default defineComponent({\n          setup () {\n            const xGrid2 = ref({} as VxeGridInstance)\n\n            const gridOptions2 = reactive({\n              border: true,\n              height: 300,\n              columns: [\n                { type: 'checkbox', width: 60 },\n                { field: 'name', title: 'Name' },\n                { field: 'role', title: 'Role' },\n                {\n                  field: 'sex',\n                  title: 'Sex',\n                  formatter ({ cellValue }) {\n                    if (cellValue === '1') {\n                      return '男'\n                    } else if (cellValue === '0') {\n                      return '女'\n                    }\n                    return ''\n                  }\n                },\n                { field: 'age', title: 'Age' },\n                { field: 'address', title: 'Address', showOverflow: true }\n              ],\n              data: [\n                { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: '1', age: 28, address: 'Shenzhen' },\n                { id: 10002, name: 'Test2', nickname: 'T2', role: 'Test', sex: '0', age: 22, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', nickname: 'T3', role: 'PM', sex: '1', age: 32, address: 'Shanghai' },\n                { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: '0', age: 23, address: 'Shenzhen' },\n                { id: 10005, name: 'Test5', nickname: 'T5', role: 'Develop', sex: '0', age: 30, address: 'Shanghai' },\n                { id: 10006, name: 'Test6', nickname: 'T6', role: 'Designer', sex: '0', age: 21, address: 'Shenzhen' },\n                { id: 10007, name: 'Test7', nickname: 'T7', role: 'Test', sex: '1', age: 29, address: 'Guangzhou' },\n                { id: 10008, name: 'Test8', nickname: 'T8', role: 'Develop', sex: '1', age: 35, address: 'Shenzhen' },\n                { id: 10009, name: 'Test9', nickname: 'T9', role: 'Test', sex: '1', age: 24, address: 'Shenzhen' },\n                { id: 100010, name: 'Test10', nickname: 'T10', role: 'Develop', sex: '1', age: 20, address: 'Guangzhou' }\n              ]\n            } as VxeGridProps)\n\n            const exportEvent = () => {\n              const $grid = xGrid2.value\n              const workBook = XLSX.utils.table_to_book($grid.$el.querySelector('.body--wrapper>.vxe-table--body') as HTMLElement)\n              XLSX.writeFile(workBook, '数据导出.xlsx')\n            }\n\n            return {\n              xGrid2,\n              gridOptions2,\n              exportEvent\n            }\n          }\n        })\n        "]}}}),j=n("6b0d"),T=n.n(j);const w=T()(O,[["render",f]]);t["default"]=w}}]);