(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5e38ceae"],{"1da1":function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n("d3b7");function a(e,t,n,a,r,d,o){try{var l=e[d](o),i=l.value}catch(s){return void n(s)}l.done?t(i):Promise.resolve(i).then(a,r)}function r(e){return function(){var t=this,n=arguments;return new Promise((function(r,d){var o=e.apply(t,n);function l(e){a(o,r,d,l,i,"next",e)}function i(e){a(o,r,d,l,i,"throw",e)}l(void 0)}))}}},"99af":function(e,t,n){"use strict";var a=n("23e7"),r=n("da84"),d=n("d039"),o=n("e8b5"),l=n("861d"),i=n("7b0b"),s=n("07fa"),c=n("8418"),u=n("65f0"),m=n("1dde"),g=n("b622"),p=n("2d00"),f=g("isConcatSpreadable"),b=9007199254740991,h="Maximum allowed index exceeded",v=r.TypeError,x=p>=51||!d((function(){var e=[];return e[f]=!1,e.concat()[0]!==e})),R=m("concat"),w=function(e){if(!l(e))return!1;var t=e[f];return void 0!==t?!!t:o(e)},E=!x||!R;a({target:"Array",proto:!0,forced:E},{concat:function(e){var t,n,a,r,d,o=i(this),l=u(o,0),m=0;for(t=-1,a=arguments.length;t<a;t++)if(d=-1===t?o:arguments[t],w(d)){if(r=s(d),m+r>b)throw v(h);for(n=0;n<r;n++,m++)n in d&&c(l,m,d[n])}else{if(m>=b)throw v(h);c(l,m++,d)}return l.length=m,l}})},b899:function(e,t,n){"use strict";n.r(t);var a=n("7a23"),r=Object(a["createElementVNode"])("p",{class:"tip"},[Object(a["createTextVNode"])(" 具体兼容请查看 "),Object(a["createElementVNode"])("a",{class:"link",href:"https://github.com/x-extends/vxe-table-plugin-element",target:"_blank"},"vxe-table-plugin-element"),Object(a["createTextVNode"])(" 插件的 API"),Object(a["createElementVNode"])("br"),Object(a["createElementVNode"])("span",{class:"red"},"（注：该示例仅供参考，具体逻辑请自行实现）")],-1),d=Object(a["createTextVNode"])("新增"),o=Object(a["createTextVNode"])("保存"),l={class:"demo-code"},i=Object(a["createTextVNode"])("      "),s=Object(a["createTextVNode"])("\r\n      "),c=Object(a["createTextVNode"])("\r\n    ");function u(e,t,n,u,m,g){var p=Object(a["resolveComponent"])("el-alert"),f=Object(a["resolveComponent"])("el-button"),b=Object(a["resolveComponent"])("vxe-grid"),h=Object(a["resolveComponent"])("pre-code");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",null,[r,Object(a["createVNode"])(b,Object(a["mergeProps"])({ref:"xGrid"},e.gridOptions,Object(a["toHandlers"])(e.gridEvents)),{top:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(p,{type:"warning",title:"已选择 ".concat(e.demo1.selectRecords.length," 项"),closable:!1,"show-icon":""},null,8,["title"])]})),toolbar_buttons:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(f,{onClick:e.insertEvent},{default:Object(a["withCtx"])((function(){return[d]})),_:1},8,["onClick"]),Object(a["createVNode"])(f,{onClick:e.saveEvent},{default:Object(a["withCtx"])((function(){return[o]})),_:1},8,["onClick"])]})),_:1},16),Object(a["createElementVNode"])("p",l,Object(a["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(a["createElementVNode"])("pre",null,[i,Object(a["createVNode"])(h,{class:"xml"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),s,Object(a["createVNode"])(h,{class:"typescript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),c])])}var m=n("1da1"),g=(n("96cf"),n("4de4"),n("d3b7"),n("b0c0"),n("99af"),n("215e")),p=Object(a["defineComponent"])({setup:function(){var e=Object(a["ref"])({}),t=[{value:"Designer",name:"Designer"},{value:"Develop",name:"Develop"},{value:"Test",name:"Test"},{value:"PM",name:"PM"}],n=Object(a["reactive"])({selectRecords:[]}),r=Object(a["reactive"])({border:!0,showOverflow:!0,keepSource:!0,height:460,loading:!1,data:[],toolbarConfig:{slots:{buttons:"toolbar_buttons"}},editConfig:{trigger:"click",mode:"row"},columns:[{type:"checkbox",width:60},{type:"seq",title:"Number",width:80},{field:"name",title:"ElInput",minWidth:140,editRender:{name:"ElInput"}},{field:"role",title:"ElAutocomplete",width:160,editRender:{name:"ElAutocomplete",props:{fetchSuggestions:function(e,n){var a=e?t.filter((function(t){return 0===t.name.toLowerCase().indexOf(e.toLowerCase())})):t;setTimeout((function(){n(a)}),500*Math.random())}}}},{field:"age",title:"ElInputNumber",width:160,editRender:{name:"ElInputNumber",props:{max:99,min:18}}},{field:"sex",title:"ElSelect",width:140,editRender:{name:"ElSelect",options:[]}},{field:"sex1",title:"ElSelect（不建议放在单元格）",width:260,editRender:{name:"ElSelect",options:[],props:{multiple:!0,clearable:!0}}},{field:"sex2",title:"ElSelect",width:140,editRender:{name:"ElSelect",optionGroups:[],props:{clearable:!0}}},{field:"region",title:"ElCascader",width:200,editRender:{name:"ElCascader",props:{options:[]}}},{field:"date",title:"ElDatePicker",width:200,editRender:{name:"ElDatePicker",props:{type:"date",format:"YYYY/MM/DD"}}},{field:"date1",title:"DateTimePicker",width:220,editRender:{name:"ElDatePicker",props:{type:"datetime",format:"YYYY-MM-DD HH:mm:ss"}}},{field:"date5",title:"ElTimeSelect",width:200,editRender:{name:"ElTimeSelect",props:{pickerOptions:{start:"08:30",step:"00:15",end:"18:30"}}}},{field:"flag",title:"ElSwitch",width:100,cellRender:{name:"ElSwitch"}},{field:"rate",title:"ElRate",width:200,cellRender:{name:"ElRate"}}]}),d={checkboxAll:function(){var t=e.value;n.selectRecords=t.getCheckboxRecords()},checkboxChange:function(){var t=e.value;n.selectRecords=t.getCheckboxRecords()}},o=function(){var e=[{label:"男",value:"1"},{label:"女",value:"0"}];if(r.columns){var t=r.columns[5];t.editRender&&(t.editRender.options=e);var n=r.columns[6];n.editRender&&(n.editRender.options=e)}},l=function(){var e=[{label:"北京",value:1,children:[{value:3,label:"东城区"},{value:4,label:"西城区"}]},{label:"上海",value:21,children:[{value:23,label:"黄浦区"},{value:24,label:"卢湾区"}]},{label:"广东",value:42,children:[{value:43,label:"广州市"},{value:67,label:"深圳市"}]}];if(r.columns){var t=r.columns[8];t.editRender&&t.editRender.props&&(t.editRender.props.options=e)}},i=function(){var e=[{label:"分组1",options:[{label:"男",value:"1"}]},{label:"分组2",options:[{label:"女",value:"0"}]}];if(r.columns){var t=r.columns[7];t.editRender&&(t.editRender.optionGroups=e)}},s=function(){var t=Object(m["a"])(regeneratorRuntime.mark((function t(){var n,a,r,d;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.value,a={role:"",age:18,sex1:[],region:[],flag:!1,rate:2},t.next=4,n.insert(a);case 4:r=t.sent,d=r.row,n.setActiveRow(d);case 7:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),c=function(){var t=e.value,n=t.getRecordset(),a=n.insertRecords,r=n.removeRecords,d=n.updateRecords;a.length||r.length||d.length?g["a"].alert("insertRecords=".concat(a.length,"; removeRecords=").concat(r.length,"; updateRecords=").concat(d.length)):g["a"].alert("数据未改动！")};return o(),l(),i(),r.loading=!0,setTimeout((function(){r.data=[{id:10001,name:"Test1",nickname:"T1",role:"Develop",sex:"0",sex1:[],state:"",region:[],age:28,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",date7:"",color1:"",tree1:"",tree2:[],rate:5,rate1:59,flag:!1,address:"Shenzhen"},{id:10002,name:"Test2",nickname:"T2",role:"Test",sex:"1",sex1:[],state:"",region:[],age:22,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",date7:"",color1:"",tree1:"",tree2:[],rate:2,rate1:22,flag:!1,address:"Guangzhou"},{id:10003,name:"Test3",nickname:"T3",role:"PM",sex:"0",sex1:[],state:"",region:[],age:32,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",date7:"",color1:"",tree1:"",tree2:[],rate:3,rate1:12,flag:!1,address:"Shanghai"},{id:10004,name:"Test4",nickname:"T4",role:"Designer",sex:"0",sex1:["1","0"],state:"",region:[],age:23,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",color1:"",tree1:"",tree2:[],date7:"",rate:33,rate1:4,flag:!0,address:"Shenzhen"},{id:10005,name:"Test5",nickname:"T5",role:"Develop",sex:"0",sex1:["1","0"],state:"",region:[],age:30,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",color1:"",tree1:"",tree2:[],date7:"",rate:0,rate1:15,flag:!0,address:"Shanghai"},{id:10006,name:"Test6",nickname:"T6",role:"Designer",sex:"0",sex1:[],state:"",region:[],age:21,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",date7:"",color1:"",tree1:"",tree2:[],rate:3,rate1:73,flag:!1,address:"Shenzhen"},{id:10007,name:"Test7",nickname:"T7",role:"Test",sex:"1",sex1:["1"],state:"",region:[],age:29,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",date7:"",color1:"",tree1:"",tree2:[],rate:0,rate1:0,flag:!0,address:"Guangzhou"},{id:10008,name:"Test8",nickname:"T8",role:"Develop",sex:"1",sex1:[],state:"",region:[],age:35,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",date7:"",color1:"",tree1:"",tree2:[],rate:2,rate1:14,flag:!1,address:"Shenzhen"},{id:10009,name:"Test9",nickname:"T9",role:"Test",sex:"1",sex1:["0"],state:"",region:[],age:24,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",date7:"",color1:"",tree1:"",tree2:[],rate:3,rate1:52,flag:!1,address:"Shenzhen"},{id:100010,name:"Test10",nickname:"T10",role:"Develop",sex:"1",sex1:[],state:"",region:[],age:20,date:"",date1:"",date2:"",date3:"",date4:[],date5:"",date7:"",color1:"",tree1:"",tree2:[],rate:4,rate1:83,flag:!1,address:"Guangzhou"}],r.loading=!1}),500),{xGrid:e,demo1:n,gridOptions:r,gridEvents:d,insertEvent:s,saveEvent:c,demoCodes:['\n        <vxe-grid ref="xGrid" v-bind="gridOptions" v-on="gridEvents">\n          <template #top>\n            <el-alert type="warning" :title="`已选择 ${demo1.selectRecords.length} 项`" :closable="false" show-icon></el-alert>\n          </template>\n          <template #toolbar_buttons>\n            <el-button @click="insertEvent">新增</el-button>\n            <el-button @click="saveEvent">保存</el-button>\n          </template>\n        </vxe-grid>\n        ',"\n        import { defineComponent, reactive, ref } from 'vue'\n        import { ElMessageBox } from 'element-plus'\n        import { VxeGridInstance, VxeGridProps, VxeGridListeners } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const xGrid = ref({} as VxeGridInstance)\n\n            const restaurants = [\n              { value: 'Designer', name: 'Designer' },\n              { value: 'Develop', name: 'Develop' },\n              { value: 'Test', name: 'Test' },\n              { value: 'PM', name: 'PM' }\n            ]\n\n            const demo1 = reactive({\n              selectRecords: [] as any[]\n            })\n\n            const gridOptions = reactive({\n              border: true,\n              showOverflow: true,\n              keepSource: true,\n              height: 460,\n              loading: false,\n              data: [],\n              toolbarConfig: {\n                slots: {\n                  buttons: 'toolbar_buttons'\n                }\n              },\n              editConfig: {\n                trigger: 'click',\n                mode: 'row'\n              },\n              columns: [\n                { type: 'checkbox', width: 60 },\n                { type: 'seq', title: 'Number', width: 80 },\n                { field: 'name', title: 'ElInput', minWidth: 140, editRender: { name: 'ElInput' } },\n                {\n                  field: 'role',\n                  title: 'ElAutocomplete',\n                  width: 160,\n                  editRender: {\n                    name: 'ElAutocomplete',\n                    props: {\n                      fetchSuggestions (queryString: any, cb: (params: any) => void) {\n                        const results = queryString ? restaurants.filter(item => (item.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0)) : restaurants\n                        setTimeout(() => {\n                          cb(results)\n                        }, 500 * Math.random())\n                      }\n                    }\n                  }\n                },\n                { field: 'age', title: 'ElInputNumber', width: 160, editRender: { name: 'ElInputNumber', props: { max: 99, min: 18 } } },\n                { field: 'sex', title: 'ElSelect', width: 140, editRender: { name: 'ElSelect', options: [] } },\n                { field: 'sex1', title: 'ElSelect（不建议放在单元格）', width: 260, editRender: { name: 'ElSelect', options: [], props: { multiple: true, clearable: true } } },\n                { field: 'sex2', title: 'ElSelect', width: 140, editRender: { name: 'ElSelect', optionGroups: [], props: { clearable: true } } },\n                { field: 'region', title: 'ElCascader', width: 200, editRender: { name: 'ElCascader', props: { options: [] } } },\n                { field: 'date', title: 'ElDatePicker', width: 200, editRender: { name: 'ElDatePicker', props: { type: 'date', format: 'YYYY/MM/DD' } } },\n                { field: 'date1', title: 'DateTimePicker', width: 220, editRender: { name: 'ElDatePicker', props: { type: 'datetime', format: 'YYYY-MM-DD HH:mm:ss' } } },\n                { field: 'date5', title: 'ElTimeSelect', width: 200, editRender: { name: 'ElTimeSelect', props: { pickerOptions: { start: '08:30', step: '00:15', end: '18:30' } } } },\n                { field: 'flag', title: 'ElSwitch', width: 100, cellRender: { name: 'ElSwitch' } },\n                { field: 'rate', title: 'ElRate', width: 200, cellRender: { name: 'ElRate' } }\n              ]\n            } as VxeGridProps)\n\n            const gridEvents: VxeGridListeners = {\n              checkboxAll () {\n                const $grid = xGrid.value\n                demo1.selectRecords = $grid.getCheckboxRecords()\n              },\n              checkboxChange () {\n                const $grid = xGrid.value\n                demo1.selectRecords = $grid.getCheckboxRecords()\n              }\n            }\n\n            const findSexList = () => {\n              const sexList = [\n                { label: '男', value: '1' },\n                { label: '女', value: '0' }\n              ]\n              if (gridOptions.columns) {\n                const column5 = gridOptions.columns[5]\n                if (column5.editRender) {\n                  column5.editRender.options = sexList\n                }\n                const column6 = gridOptions.columns[6]\n                if (column6.editRender) {\n                  column6.editRender.options = sexList\n                }\n              }\n            }\n\n            const findRegionList = () => {\n              const regionList = [\n                {\n                  label: '北京',\n                  value: 1,\n                  children: [\n                    { value: 3, label: '东城区' },\n                    { value: 4, label: '西城区' }\n                  ]\n                },\n                {\n                  label: '上海',\n                  value: 21,\n                  children: [\n                    { value: 23, label: '黄浦区' },\n                    { value: 24, label: '卢湾区' }\n                  ]\n                },\n                {\n                  label: '广东',\n                  value: 42,\n                  children: [\n                    { value: 43, label: '广州市' },\n                    { value: 67, label: '深圳市' }\n                  ]\n                }\n              ]\n              if (gridOptions.columns) {\n                const column8 = gridOptions.columns[8]\n                if (column8.editRender && column8.editRender.props) {\n                  column8.editRender.props.options = regionList\n                }\n              }\n            }\n\n            const findSexGroupList = () => {\n              const sexGroupList = [\n                {\n                  label: '分组1',\n                  options: [\n                    { label: '男', value: '1' }\n                  ]\n                },\n                {\n                  label: '分组2',\n                  options: [\n                    { label: '女', value: '0' }\n                  ]\n                }\n              ]\n              if (gridOptions.columns) {\n                const column7 = gridOptions.columns[7]\n                if (column7.editRender) {\n                  column7.editRender.optionGroups = sexGroupList\n                }\n              }\n            }\n\n            const insertEvent = async () => {\n              const $grid = xGrid.value\n              const record = {\n                role: '',\n                age: 18,\n                sex1: [],\n                region: [],\n                flag: false,\n                rate: 2\n              }\n              const { row: newRow } = await $grid.insert(record)\n              $grid.setActiveRow(newRow)\n            }\n\n            const saveEvent = () => {\n              const $grid = xGrid.value\n              const { insertRecords, removeRecords, updateRecords } = $grid.getRecordset()\n              if (insertRecords.length || removeRecords.length || updateRecords.length) {\n                ElMessageBox.alert(`insertRecords=${insertRecords.length}; removeRecords=${removeRecords.length}; updateRecords=${updateRecords.length}`)\n              } else {\n                ElMessageBox.alert('数据未改动！')\n              }\n            }\n\n            findSexList()\n            findRegionList()\n            findSexGroupList()\n\n            gridOptions.loading = true\n            setTimeout(() => {\n              gridOptions.data = [\n                { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: '0', sex1: [], region: [], age: 28, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', date7: '', color1: '', tree1: '', tree2: [], rate: 5, rate1: 59, flag: false, address: 'Shenzhen' },\n                { id: 10002, name: 'Test2', nickname: 'T2', role: 'Test', sex: '1', sex1: [], region: [], age: 22, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', date7: '', color1: '', tree1: '', tree2: [], rate: 2, rate1: 22, flag: false, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', nickname: 'T3', role: 'PM', sex: '0', sex1: [], region: [], age: 32, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', date7: '', color1: '', tree1: '', tree2: [], rate: 3, rate1: 12, flag: false, address: 'Shanghai' },\n                { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: '0', sex1: ['1', '0'], region: [], age: 23, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', color1: '', tree1: '', tree2: [], date7: '', rate: 33, rate1: 4, flag: true, address: 'Shenzhen' },\n                { id: 10005, name: 'Test5', nickname: 'T5', role: 'Develop', sex: '0', sex1: ['1', '0'], region: [], age: 30, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', color1: '', tree1: '', tree2: [], date7: '', rate: 0, rate1: 15, flag: true, address: 'Shanghai' },\n                { id: 10006, name: 'Test6', nickname: 'T6', role: 'Designer', sex: '0', sex1: [], region: [], age: 21, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', date7: '', color1: '', tree1: '', tree2: [], rate: 3, rate1: 73, flag: false, address: 'Shenzhen' },\n                { id: 10007, name: 'Test7', nickname: 'T7', role: 'Test', sex: '1', sex1: ['1'], region: [], age: 29, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', date7: '', color1: '', tree1: '', tree2: [], rate: 0, rate1: 0, flag: true, address: 'Guangzhou' },\n                { id: 10008, name: 'Test8', nickname: 'T8', role: 'Develop', sex: '1', sex1: [], region: [], age: 35, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', date7: '', color1: '', tree1: '', tree2: [], rate: 2, rate1: 14, flag: false, address: 'Shenzhen' },\n                { id: 10009, name: 'Test9', nickname: 'T9', role: 'Test', sex: '1', sex1: ['0'], region: [], age: 24, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', date7: '', color1: '', tree1: '', tree2: [], rate: 3, rate1: 52, flag: false, address: 'Shenzhen' },\n                { id: 100010, name: 'Test10', nickname: 'T10', role: 'Develop', sex: '1', sex1: [], region: [], age: 20, date: '', date1: '', date2: '', date3: '', date4: [], date5: '', date7: '', color1: '', tree1: '', tree2: [], rate: 4, rate1: 83, flag: false, address: 'Guangzhou' }\n              ]\n              gridOptions.loading = false\n            }, 500)\n\n            return {\n              xGrid,\n              demo1,\n              gridOptions,\n              gridEvents,\n              insertEvent,\n              saveEvent\n            }\n          }\n        })\n        "]}}}),f=n("6b0d"),b=n.n(f);const h=b()(p,[["render",u]]);t["default"]=h}}]);